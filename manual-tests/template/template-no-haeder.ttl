@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix gr:      <http://purl.org/goodrelations/v1#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix dbpedia: <http://dbpedia.org/resource/> .
@prefix vso:     <http://purl.org/vso/ns#> .
@prefix : <http://example.org/cars#> .

# Template is an RDF file showing how one row from the CSV file will be mapped to RDF.
# Values from one row will be inserted into URIs and literals as specified by the template
# variables and the resulting triples will be in the output.

# Variable ${1} will insert the value of Make column verbatim into a URI or a literal

# We want the manufacturer information from different rows to translate into same
# resource so the URIs for manufactures directly use their label 

:Manufacturer-${1} a gr:BusinessEntity ;
	rdfs:label "${1}" .

# Use #{2} to insert the SHA1 hash of the value of Model column into a URI or a literal

# Model values might have spaces or special characters in it so we cannot use them in URIs 
# as is so we use their hash value
# Multiple column values might be used in a single URI or literal as seen in the label
	
:Model-#{2} a gr:ProductOrServiceModel ;
	rdfs:label "${1} ${2}" ;
	gr:hasManufacturer :Manufacturer-${1} .	
	
# Special variable #{_ROW_} can be used to insert the row number for the current row

# Literals in the template may be typed (no validation is performed during conversion)
	
:Car-${_ROW_} a vso:Automobile, gr:ActualProductOrServiceInstance ;
    rdfs:label "${1} ${2} (${0})" ;
    gr:hasManufacturer :Manufacturer-#{1} ;
    gr:hasMakeAndModel :Model-#{2} ;
    vso:modelDate "${0}-01-01"^^xsd:date .

# Special variable #{_UUID_} can be used to insert a unique string for each its occurence
# Bnodes can be used in the template as seen below. Same bnode 

:Offer-#{_UUID_} a gr:Offering ;
    rdfs:comment "${3}" ;
    gr:includes :Car-${_ROW_} ;
    gr:hasBusinessFunction gr:Sell ;
    gr:hasPriceSpecification _:price .
    
_:price a gr:UnitPriceSpecification ;
    gr:hasCurrency "USD"^^xsd:string ;
    gr:hasCurrencyValue "${4}"^^xsd:float .
